{"mappings":"AAAA;AAEA,MAAM,eAAe,SAAS,aAAa,CAAC;AAE5C,SAAS,UAAU,MAAM;IACvB,OAAO,SAAS,OAAO,OAAO,CAAC,cAAc;AAC/C;AAEA,SAAS,SAAS,IAAI;IACpB,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,QAAQ;IAEtC,MAAM,IAAI,CACR,CAAC,GAAG,IAAM,UAAU,EAAE,OAAO,CAAC,MAAM,IAAI,UAAU,EAAE,OAAO,CAAC,MAAM;IAEpE,MAAM,OAAO,CAAC,CAAC,OAAS,KAAK,WAAW,CAAC;AAC3C;AAEA,SAAS,aAAa,IAAI;IACxB,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,QAAQ;IAEtC,OAAO,MAAM,GAAG,CAAC,CAAC,OAAU,CAAA;YAC1B,MAAM,KAAK,WAAW;YACtB,UAAU,KAAK,OAAO,CAAC,QAAQ;YAC/B,QAAQ,UAAU,KAAK,OAAO,CAAC,MAAM;YACrC,KAAK,OAAO,KAAK,OAAO,CAAC,GAAG;QAC9B,CAAA;AACF;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employeeList = document.querySelector('ul');\n\nfunction getSalary(salary) {\n  return parseInt(salary.replace(/[^0-9.-]+/g, ''));\n}\n\nfunction sortList(list) {\n  const items = Array.from(list.children);\n\n  items.sort(\n    (a, b) => getSalary(b.dataset.salary) - getSalary(a.dataset.salary),\n  );\n  items.forEach((item) => list.appendChild(item));\n}\n\nfunction getEmployees(list) {\n  const items = Array.from(list.children);\n\n  return items.map((item) => ({\n    name: item.textContent,\n    position: item.dataset.position,\n    salary: getSalary(item.dataset.salary),\n    age: Number(item.dataset.age),\n  }));\n}\n\nsortList(employeeList);\ngetEmployees(employeeList);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}