{"mappings":"ACEA,IAOQ,EAPF,EAAe,SAAS,aAAa,CAAC,MAE5C,SAAS,EAAU,CAAM,EACvB,OAAO,SAAS,EAAO,OAAO,CAAC,aAAc,IAC/C,CAKE,CAFM,EAAQ,MAAM,IAAI,CAAC,AAmBlB,EAnBuB,QAAQ,GAEhC,IAAI,CACR,SAAC,CAAA,CAAG,CADN,EACY,OAAA,EAAU,EAAE,OAAO,CAAC,MAAM,EAAI,EAAU,EAAE,OAAO,CAAC,MAAM,C,GAEpE,EAAM,OAAO,CAAC,SAAC,CAAf,EAAwB,OAAA,AAcjB,EAdsB,WAAW,CAAC,E,GAMlC,AAFO,MAAM,IAAI,CAAC,AAWd,EAXmB,QAAQ,EAEzB,GAAG,CAAC,SAAC,CAAlB,EAA4B,MAAA,CAC1B,KAAM,EAAK,WAAW,CACtB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAU,EAAK,OAAO,CAAC,MAAM,EACrC,IAAK,OAAO,EAAK,OAAO,CAAC,GAAG,CAC9B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeeList = document.querySelector(\"ul\");\nfunction getSalary(salary) {\n    return parseInt(salary.replace(/[^0-9.-]+/g, \"\"));\n}\nfunction sortList(list) {\n    var items = Array.from(list.children);\n    items.sort(function(a, b) {\n        return getSalary(b.dataset.salary) - getSalary(a.dataset.salary);\n    });\n    items.forEach(function(item) {\n        return list.appendChild(item);\n    });\n}\nfunction getEmployees(list) {\n    var items = Array.from(list.children);\n    return items.map(function(item) {\n        return {\n            name: item.textContent,\n            position: item.dataset.position,\n            salary: getSalary(item.dataset.salary),\n            age: Number(item.dataset.age)\n        };\n    });\n}\nsortList(employeeList);\ngetEmployees(employeeList);\n\n//# sourceMappingURL=index.51627e0c.js.map\n","'use strict';\n\nconst employeeList = document.querySelector('ul');\n\nfunction getSalary(salary) {\n  return parseInt(salary.replace(/[^0-9.-]+/g, ''));\n}\n\nfunction sortList(list) {\n  const items = Array.from(list.children);\n\n  items.sort(\n    (a, b) => getSalary(b.dataset.salary) - getSalary(a.dataset.salary),\n  );\n  items.forEach((item) => list.appendChild(item));\n}\n\nfunction getEmployees(list) {\n  const items = Array.from(list.children);\n\n  return items.map((item) => ({\n    name: item.textContent,\n    position: item.dataset.position,\n    salary: getSalary(item.dataset.salary),\n    age: Number(item.dataset.age),\n  }));\n}\n\nsortList(employeeList);\ngetEmployees(employeeList);\n"],"names":["items","employeeList","document","querySelector","getSalary","salary","parseInt","replace","Array","from","list","children","sort","a","b","dataset","forEach","item","appendChild","map","name","textContent","position","age","Number"],"version":3,"file":"index.51627e0c.js.map"}